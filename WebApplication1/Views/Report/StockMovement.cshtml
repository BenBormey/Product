@{
    ViewData["Title"] = "Stock Movement";
    string from = Context.Request.Query["from"];
    string to = Context.Request.Query["to"];
    if (string.IsNullOrEmpty(from)) from = DateTime.Today.AddDays(-30).ToString("yyyy-MM-dd");
    if (string.IsNullOrEmpty(to)) to = DateTime.Today.ToString("yyyy-MM-dd");
}
<h3 class="mb-2">Stock Movement</h3>
<form class="row g-2 mb-3" method="get">
    <div class="col-auto"><input class="form-control" type="date" name="from" value="@from" /></div>
    <div class="col-auto"><input class="form-control" type="date" name="to" value="@to" /></div>
    <div class="col-auto"><button class="btn btn-primary">Apply</button></div>
</form>

<div class="row g-3">
    <div class="col-lg-7">
        <table class="table table-dark table-sm" id="tbl">
            <thead><tr><th>Product</th><th class="text-end">In</th><th class="text-end">Out</th><th class="text-end">Net</th></tr></thead>
            <tbody></tbody>
        </table>
    </div>
    <div class="col-lg-5"><canvas id="chart"></canvas></div>
</div>

@section Scripts {
    <script>
        (async function(){
          const from = new URLSearchParams(location.search).get('from') ?? '@from';
          const to   = new URLSearchParams(location.search).get('to')   ?? '@to';
          const data = await (await fetch(`/Reports/StockMovement?from=${from}&to=${to}`)).json();

          const tb = document.querySelector('#tbl tbody'); tb.innerHTML='';
          const labels = [], inArr=[], outArr=[], netArr=[];
          for (const r of data){
            labels.push(r.product);
            inArr.push(r.inQty);
            outArr.push(r.outQty);
            netArr.push(r.netQty);
            tb.insertAdjacentHTML('beforeend',
              `<tr><td>${r.product}</td>
                   <td class="text-end">${r.inQty}</td>
                   <td class="text-end">${r.outQty}</td>
                   <td class="text-end">${r.netQty}</td></tr>`);
          }

          new Chart(document.getElementById('chart'), {
            type:'bar',
            data:{ labels,
              datasets:[
                {label:'IN',  data: inArr},
                {label:'OUT', data: outArr},
                {label:'NET', data: netArr}
              ]},
            options:{ responsive:true, scales:{ y:{ beginAtZero:true } } }
          });
        })();
    </script>
}
