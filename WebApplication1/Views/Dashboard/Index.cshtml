@using System.Text.Json
@using WebApplication1
@model WebApplication1.Models.Dashboard.AnalyticsVM
@inject Microsoft.Extensions.Localization.IStringLocalizer<SharedResource> T

@{
    ViewData["Title"] = T["Dashboard"];
    var monthTitle = $"{Model.From:MMMM} {Model.From:yyyy}";
    // pick some soft colors for the doughnut (auto-trim to slice count)
    var colors = new[] { "#ff7b7b", "#a88cff", "#35d39a", "#6fa8ff", "#f59e0b", "#10b981", "#ef4444" };
    var usedColors = colors.Take(Model.OrderStatus.Slices.Count).ToArray();
}

<h2 class="mb-3">@T["Dashboard"]</h2>

<!-- Date filter -->
<form method="get" class="row g-2 mb-4">
    <div class="col-auto">
        <input class="form-control" type="date" name="from" value="@Model.From.ToString("yyyy-MM-dd")" />
    </div>
    <div class="col-auto">
        <input class="form-control" type="date" name="to" value="@Model.To.ToString("yyyy-MM-dd")" />
    </div>
    <div class="col-auto">
        <button class="btn btn-primary">@T["Apply"]</button>
    </div>
</form>

<!-- KPI cards -->
<div class="row g-3 mb-4">
    <div class="col-md-3">
        <div class="card bg-dark text-white shadow-sm">
            <div class="card-body">
                <div class="fw-semibold">@T["TodaysRevenue"]</div>
                <div class="display-6">$ @Model.Cards.TodaysRevenue.ToString("N2")</div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-dark text-white shadow-sm">
            <div class="card-body">
                <div class="fw-semibold">@T["TodaysOrder"]</div>
                <div class="display-6">@Model.Cards.TodaysOrder</div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-dark text-white shadow-sm">
            <div class="card-body">
                <div class="fw-semibold">@T["AvgExpense"]</div>
                <div class="display-6">$ 2000</div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-dark text-white shadow-sm">
            <div class="card-body">
                <div class="fw-semibold">@T["AvgRevenue"]</div>
                <div class="display-6">$ @Model.Cards.AvgRevenue.ToString("N2")</div>
            </div>
        </div>
    </div>
</div>

<!-- Charts row -->
<div class="row g-3 mb-4">
    <div class="col-lg-6">
        <div class="card bg-dark text-white shadow-sm h-100">
            <div class="card-header d-flex justify-content-between align-items-center">
                <span class="fw-semibold">@T["SalesDetails"]</span>
                <small class="text-secondary">@monthTitle</small>
            </div>
            <div class="card-body">
                <canvas id="statusDoughnut" height="180"></canvas>
                <div class="mt-3">
                    @for (int i = 0; i < Model.OrderStatus.Slices.Count; i++)
                    {
                        var s = Model.OrderStatus.Slices[i];
                        var color = usedColors[i];
                        <div class="d-flex align-items-center mb-1">
                            <span class="me-2" style="display:inline-block;width:12px;height:12px;border-radius:50%;background:@color"></span>
                            <span class="me-2">@s.Label</span>
                            <span class="text-secondary">— @s.Value</span>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-6">
        <div class="card bg-dark text-white shadow-sm h-100">
            <div class="card-header fw-semibold">@T["OrderChart"]</div>
            <div class="card-body">
                <canvas id="ordersBar" height="180"></canvas>
            </div>
        </div>
    </div>
</div>

<!-- Trending -->
<div class="card bg-dark text-white shadow-sm">
    <div class="card-header">
        <div class="fw-semibold">@T["TrendingOrders"]</div>
        <div class="text-secondary small">@T["TopPicksToday"]</div>
    </div>
    <div class="card-body">
        @if (Model.Trending?.Any() == true)
        {
            <div class="row g-3">
                @foreach (var p in Model.Trending)
                {
                    <div class="col-md-4">
                        <div class="border rounded overflow-hidden h-100 bg-black">
                            <img src="@(string.IsNullOrWhiteSpace(p.ImageUrl) ? $"https://picsum.photos/seed/{p.ProductId}/640/360" : p.ImageUrl)"
                                 class="w-100" style="object-fit:cover; height:180px" />
                            <div class="p-3 d-flex justify-content-between align-items-center">
                                <div class="fw-semibold">@p.Name</div>
                                <div class="text-success">$ @p.Price.ToString("N2")</div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="text-secondary">@T["NoData"]</div>
        }
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // ---- Status doughnut ----
        const statusLabels = @Html.Raw(JsonSerializer.Serialize(Model.OrderStatus.Slices.Select(s => s.Label)));
        const statusData   = @Html.Raw(JsonSerializer.Serialize(Model.OrderStatus.Slices.Select(s => s.Value)));
        const statusColors = @Html.Raw(JsonSerializer.Serialize(usedColors));

        new Chart(document.getElementById('statusDoughnut'), {
            type: 'doughnut',
            data: {
                labels: statusLabels,
                datasets: [{ data: statusData, backgroundColor: statusColors, borderWidth: 0, cutout: '70%' }]
            },
            options: {
                plugins: { legend: { display: false }, tooltip: { enabled: true } }
            }
        });

        // ---- Orders per day (bar) ----
        const dayLabels = @Html.Raw(JsonSerializer.Serialize(Model.OrdersPerDay.Labels));
        const dayValues = @Html.Raw(JsonSerializer.Serialize(Model.OrdersPerDay.Data));

        new Chart(document.getElementById('ordersBar'), {
            type: 'bar',
            data: { labels: dayLabels, datasets: [{ label: '@T["Orders"]', data: dayValues, borderRadius: 8 }] },
            options: {
                scales: {
                    x: { grid: { display: false } },
                    y: { beginAtZero: true, grid: { color: '#22262f' } }
                },
                plugins: { legend: { display: false } }
            }
        });
    </script>
}
